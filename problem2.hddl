(define (problem problem2) (:domain htn)    
    (:objects 
        r1 r2 r3 - robot
        central_warehouse l2 l3 - location 
        bolt valve tool - content
        b1 b2 b3 - box
        w1 w2 w3 - workstation
        car1 car2 car3 - carrier
        cap_50 cap_20 cap_30 - capacity
    )

   (:htn
    :parameters ()
    :subtasks (and
        ; Fill up robots with their respective items at specific locations
        (task0 (fill_up_robot b1 r1 bolt1 car1 cap_50 central_warehouse l2 w1))
        (task1 (fill_up_robot b2 r2 tool1 car2 cap_20 central_warehouse l2 w1))
        (task2 (fill_up_robot b3 r3 valve1 car3 cap_30 central_warehouse l2 w1))
        (task3 (fill_up_robot b2 r2 bolt2 car2 cap_20 central_warehouse l2 w2))
        (task4 (fill_up_robot b3 r3 valve2 car3 cap_30 central_warehouse l2 w2))
        (task5 (fill_up_robot b1 r1 bolt3 car1 cap_50 central_warehouse l3 w3))
        (task6 (fill_up_robot b2 r2 tool2 car2 cap_20 central_warehouse l3 w3))

        ; Deliver the content after filling up
        (task7 (deliver_content b1 central_warehouse l2 w1 r1 car1 cap_50 bolt1))
        (task8 (deliver_content b2 central_warehouse l2 w1 r2 car2 cap_20 tool1))
        (task9 (deliver_content b3 central_warehouse l2 w1 r3 car3 cap_30 valve1))
        (task10 (deliver_content b2 central_warehouse l2 w2 r2 car2 cap_20 bolt2))
        (task11 (deliver_content b3 central_warehouse l2 w2 r3 car3 cap_30 valve2))
        (task12 (deliver_content b1 central_warehouse l3 w3 r1 car1 cap_50 bolt3))
        (task13 (deliver_content b2 central_warehouse l3 w3 r2 car2 cap_20 tool2))

        ; Return robots to central warehouse
        (task14 (return_to_central_warehouse b1 r1 central_warehouse car1 bolt1 w1 cap_50))
        (task15 (return_to_central_warehouse b1 r1 central_warehouse car1 bolt2 w3 cap_50))
        (task16 (return_to_central_warehouse b2 r2 central_warehouse car2 tool1 w1 cap_20))
        (task17 (return_to_central_warehouse b2 r2 central_warehouse car2 bolt3 w2 cap_20))
        (task18 (return_to_central_warehouse b2 r2 central_warehouse car2 tool2 w3 cap_20))
        (task19 (return_to_central_warehouse b3 r3 central_warehouse car3 valve1 w1 cap_30))
        (task20 (return_to_central_warehouse b3 r3 central_warehouse car3 valve2 w2 cap_30))
    )

    :ordering (and
        ; Robot 1 sequence
        (task0 < task7)  ; Robot 1 fills up and delivers
        (task7 < task14) ; Robot 1 returns to warehouse
        (task14 < task5) ; Robot 1 fills up again and delivers
        (task5 < task12) ; Robot 1 delivers
        (task12 < task15) ; Robot 1 returns again

        ; Robot 2 sequence
        (task1 < task8)   ; Robot 2 fills up and delivers
        (task8 < task16)  ; Robot 2 returns to warehouse
        (task16 < task3)  ; Robot 2 fills up again and delivers
        (task3 < task10)  ; Robot 2 delivers
        (task10 < task17) ; Robot 2 returns again

        ; Robot 3 sequence
        (task2 < task9)   ; Robot 3 fills up and delivers
        (task9 < task19)  ; Robot 3 returns to warehouse
        (task19 < task4)  ; Robot 3 fills up again and delivers
        (task4 < task11)  ; Robot 3 delivers
        (task11 < task20) ; Robot 3 returns again
    )
)

    	
    (:init 
      
        (empty b1)
        (empty b2)
        (empty b3)
        (belong b1 central_warehouse)
        (belong b2 central_warehouse)
        (belong b3 central_warehouse)
        (attached bolt central_warehouse)
        (attached valve central_warehouse)
        (attached tool central_warehouse)
        (atl r1 central_warehouse)  
        (atl r2 central_warehouse)
        (atl r3 central_warehouse)
        (is_bolt bolt) 
        (is_valve valve) 
        (is_tool tool)
        (hascapacity car1 cap_50)
        (hascapacity car2 cap_20)
        (hascapacity car3 cap_30)
        (hascarrier r1 car1)
        (hascarrier r2 car2)
        (hascarrier r3 car3)
        ;(not(hasWS central_warehouse))
        ;(not(hasmultipleWS central_warehouse))
    )
    
     (:goal (and 
        (attachedtoWS bolt w1) 
        (attachedtoWS valve w1) 
        (attachedtoWS tool w1) 
        (attachedtoWS bolt w2)
        (attachedtoWS valve w2)
        (attachedtoWS bolt w3)
        (attachedtoWS tool w3)
        (empty b1)
        (empty b2)
        (empty b3)
        (not(loadedcarrier car1))
        (not(loadedcarrier car2))
        (not(loadedcarrier car3))
        (atl r1 central_warehouse) 
        (atl r2 central_warehouse) 
        (atl r3 central_warehouse) 
        (hascapacity car1 cap_50) 
        (hascarrier r1 car1)
        (hascapacity car2 cap_20) 
        (hascarrier r2 car2)
        (hascapacity car3 cap_30) 
        (hascarrier r3 car3)
        (belong b1 central_warehouse)
        (belong b2 central_warehouse)
        (belong b3 central_warehouse)
        ;(not(hasmultipleWS central_warehouse)) 
        ;(not(hasWS central_warehouse))
    ))
    
    )
