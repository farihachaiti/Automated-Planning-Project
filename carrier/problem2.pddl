(define (problem problem2) (:domain carrier)
    (:objects 
        r1 r2 r3 - robot
        central_warehouse l2 l3 - location 
        bolt valve tool - content
        b1 b2 b3 - box
        w1 w2 w3 - workstation
        car1 car2 car3 - carrier
        cap_50 cap_20 cap_30 - capacity
    )
    (:init 
        (not(hasWS central_warehouse))
        (not(hasmultipleWS central_warehouse))
        (not(adjacent w1 central_warehouse)) 
        (not(adjacent w2 central_warehouse)) 
        (not(adjacent w3 central_warehouse))
        (hasWS l2)
        (hasmultipleWS l2)
        (hasWS l3)
        (not(hasmultipleWS l3)) 
        (adjacent w1 l2) 
        (needsupplies w1)
        (adjacent w2 l2) 
        (needsupplies w2)
        (adjacent w3 l2) 
        (needsupplies w3)
        (empty b1)
        (empty b2)
        (empty b3)
        (belong b1 central_warehouse)
        (belong b2 central_warehouse)
        (belong b3 central_warehouse)
        (attached bolt central_warehouse)
        (attached valve central_warehouse)
        (attached tool central_warehouse)
        (atl r1 central_warehouse)  
        (atl r2 central_warehouse)
        (atl r3 central_warehouse)
		(is-bolt bolt) 
        (is-valve valve) 
        (is-tool tool)
        (hascapacity car1 cap_50)
        (hascapacity car2 cap_20)
        (hascapacity car3 cap_30)
        (hascarrier r1 car1)
        (hascarrier r2 car2)
        (hascarrier r3 car3)
    )
    
    (:goal (and 
        (exists (?c1 - content ?c2 - content) 
            (and 
                (attachedtoWS bolt w1) 
                (attachedtoWS valve w1) 
                (attachedtoWS tool w1) 
                (or (and (is-bolt ?c1) (is-valve ?c2)) 
                    (and (is-valve ?c1) (is-bolt ?c2))
                    (and (is-bolt ?c1) (is-tool ?c2)
                    (and (is-valve ?c1) (is-tool ?c2))
                    (and (is-tool ?c1) (is-valve ?c2))
                    (and (is-tool ?c1) (is-bolt ?c2)))
                    )
            )
        )
        (exists (?c1 - content ?c2 - content) 
            (and 
                (attachedtoWS bolt w2)
                (attachedtoWS valve w2)
                (or (and (is-bolt ?c1) (is-valve ?c2)) 
                    (and (is-valve ?c1) (is-bolt ?c2)))
            )
        )
        (exists (?c1 - content ?c2 - content) 
            (and 
                (attachedtoWS bolt w3)
                (attachedtoWS tool w3)
                (or (and (is-bolt ?c1) (is-tool ?c2)) 
                    (and (is-tool ?c1) (is-bolt ?c2)))
            )
        )
        (empty b1)
        (empty b2)
        (empty b3)
        (not(loadedcarrier car1))
        (not(loadedcarrier car2))
        (not(loadedcarrier car3))
        (atl r1 central_warehouse) 
        (atl r2 central_warehouse) 
        (atl r3 central_warehouse) 
        (hascapacity car1 cap_50) 
        (hascarrier r1 car1)
        (hascapacity car2 cap_20) 
        (hascarrier r2 car2)
        (hascapacity car3 cap_30) 
        (hascarrier r3 car3)
        (belong b1 central_warehouse)
        (belong b2 central_warehouse)
        (belong b3 central_warehouse)
        (not(hasmultipleWS central_warehouse)) 
        (not(hasWS central_warehouse))
    ))
    
    )
